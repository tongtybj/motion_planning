<?xml version="1.0" encoding="utf-8"?>
<launch>
  <arg name="headless" default="false" />

  <arg name="simulation" default="false" />
  <arg name="robot_ns" value="dragon" />
  <arg name="type" default="quad" />

  <arg name="discrete_path_search_method_name" default="differential_kinematics" />
  <arg name="motion_type"  default="1" /> <!--SE2: 0, SE3: 1 -->

  <arg name="start_squeeze_path_from_real_state" default="true" />
  <arg name="overhead_opening" default="false" />
  <arg name="discrete_path_debug_flag" default="false" />
  <arg name="trajectory_period" default="50.0" />

  <arg name="save_squeeze_path_flag" default="false" />
  <arg name="load_squeeze_path_flag" default="false" />
  <arg name="path_file_name" default="dragon_planning_log.txt" />

  <arg name="robot_model" default="$(find dragon)/robots/quad/euclid_201709.urdf.xacro" />

  ###########  Robot Model  ###########
  <group unless="$(arg headless)">
    <include file="$(find aerial_robot_model)/launch/aerial_robot_model.launch" >
      <arg name="headless" value="$(arg headless)" />
      <arg name="robot_model" value="$(arg robot_model)" />
      <arg name="robot_ns" value="$(arg robot_ns)" />
      <arg name="rviz_config" value="$(find sampling_based_method)/config/dragon/planning.rviz" />
      <arg name="rviz_init_pose" value="$(find dragon)/config/$(arg type)/RvizInit.yaml" />
      <arg name="need_joint_state" value="false"/>
    </include>
  </group>

  ########## Sampling based method (Moveit) ###########
  <group ns="$(arg robot_ns)">
    <param name="robot_description_semantic" textfile="$(find sampling_based_method)/config/dragon/$(arg type)/moveit.srdf" />
    <rosparam file="$(find dragon)/config/$(arg type)/model/HydrusLikeRobotModel.yaml" command="load" />
  </group>

  ###########  Path Planning and Navigation  ###########
  <node pkg="squeeze_navigation" type="squeeze_navigation_node" name="squeeze_navigation_node" output="screen" ns="$(arg robot_ns)" >
    <param name="debug_verbose" value="false" />
    <param name="headless" value="$(arg headless)" />

    <param name = "tf_prefix" value = "$(arg robot_ns)" />

    <!-- discrete path search -->
    <param name="discrete_path_search_method_name" value="squeeze_navigation/$(arg discrete_path_search_method_name)" />

    <rosparam file="$(find squeeze_navigation)/config/$(arg discrete_path_search_method_name)/dragon_$(arg type).yaml" command="load" />
    <rosparam file="$(find squeeze_navigation)/config/env/gap.yaml" command="load"/>

    <param name="discrete_path_debug_flag" value="$(arg discrete_path_debug_flag)" />
    <param name="planning_mode" value="2" /> <!-- if="$(arg transformation)" -->
    <param name="motion_type" value="$(arg motion_type)" />
    <param name="gap_type" value="1" /> <!-- unless="$(arg horizontal_gap)" -->
    <param name="file_state_offset_x" type="double" value="0.0" />
    <param name="file_state_offset_y" type="double" value="0.0" />
    <param name="file_state_offset_z" type="double" value="0.0" />

    <!-- sampling based method -->
    <param name="save_squeeze_path_flag" value="$(arg save_squeeze_path_flag)" />
    <param name="load_squeeze_path_flag" value="$(arg load_squeeze_path_flag)" />
    <param name="start_squeeze_path_from_real_state" value="$(arg start_squeeze_path_from_real_state)" />
    <param name="overhead_opening" value="$(arg overhead_opening)" />
    <param name="file_name" value="$(find sampling_based_method)/path_log/dragon/$(arg path_file_name)" />
    <param name="solving_time_limit" type="double" value="36000"/>
    <param name="motion_sequence_rate" value="10"/>

    <!-- RRT -->
    <param name="ompl_mode" value="0"/> <!-- RRT START:0 -->
    <param name="state_validity_check_res" value="0.005"/>
    <param name="valid_segment_count_factor" value="20"/> <!--20-->

    <!-- continuous path generator -->
    <param name="squeeze_trajectory_period" value="$(arg trajectory_period)" />

    <!-- navigation -->
    <param name="control_frequency" value="40.0" />
  </node>

  <group if="$(eval arg('simulation'))">
    <param name="opening/robot_description" command="$(find xacro)/xacro $(find squeeze_navigation)/urdf/opening.urdf" />
    <node pkg="gazebo_ros" type="spawn_model" name="valve_spawn" args="-param opening/robot_description -urdf -x 0 -y 0 -z 0 -model opening" />
  </group>

</launch>
